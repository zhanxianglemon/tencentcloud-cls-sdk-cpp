// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cls_logs.proto
// Protobuf C++ Version: 5.29.3

#include "cls_logs.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace cls {

inline constexpr LogTag::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        value_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR LogTag::LogTag(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LogTagDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LogTagDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LogTagDefaultTypeInternal() {}
  union {
    LogTag _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LogTagDefaultTypeInternal _LogTag_default_instance_;

inline constexpr Log_Content::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        value_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR Log_Content::Log_Content(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Log_ContentDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Log_ContentDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Log_ContentDefaultTypeInternal() {}
  union {
    Log_Content _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Log_ContentDefaultTypeInternal _Log_Content_default_instance_;

inline constexpr Log::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        contents_{},
        time_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR Log::Log(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LogDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LogDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LogDefaultTypeInternal() {}
  union {
    Log _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LogDefaultTypeInternal _Log_default_instance_;

inline constexpr LogGroup::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        logs_{},
        logtags_{},
        contextflow_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        filename_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        source_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR LogGroup::LogGroup(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LogGroupDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LogGroupDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LogGroupDefaultTypeInternal() {}
  union {
    LogGroup _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LogGroupDefaultTypeInternal _LogGroup_default_instance_;

inline constexpr LogGroupList::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : loggrouplist_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR LogGroupList::LogGroupList(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LogGroupListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LogGroupListDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LogGroupListDefaultTypeInternal() {}
  union {
    LogGroupList _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LogGroupListDefaultTypeInternal _LogGroupList_default_instance_;
}  // namespace cls
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_cls_5flogs_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_cls_5flogs_2eproto = nullptr;
const ::uint32_t
    TableStruct_cls_5flogs_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::cls::Log_Content, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cls::Log_Content, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cls::Log_Content, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::cls::Log_Content, _impl_.value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::cls::Log, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cls::Log, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cls::Log, _impl_.time_),
        PROTOBUF_FIELD_OFFSET(::cls::Log, _impl_.contents_),
        0,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::cls::LogTag, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cls::LogTag, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cls::LogTag, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::cls::LogTag, _impl_.value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::cls::LogGroup, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cls::LogGroup, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cls::LogGroup, _impl_.logs_),
        PROTOBUF_FIELD_OFFSET(::cls::LogGroup, _impl_.contextflow_),
        PROTOBUF_FIELD_OFFSET(::cls::LogGroup, _impl_.filename_),
        PROTOBUF_FIELD_OFFSET(::cls::LogGroup, _impl_.source_),
        PROTOBUF_FIELD_OFFSET(::cls::LogGroup, _impl_.logtags_),
        ~0u,
        0,
        1,
        2,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cls::LogGroupList, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cls::LogGroupList, _impl_.loggrouplist_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::cls::Log_Content)},
        {12, 22, -1, sizeof(::cls::Log)},
        {24, 34, -1, sizeof(::cls::LogTag)},
        {36, 49, -1, sizeof(::cls::LogGroup)},
        {54, -1, -1, sizeof(::cls::LogGroupList)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::cls::_Log_Content_default_instance_._instance,
    &::cls::_Log_default_instance_._instance,
    &::cls::_LogTag_default_instance_._instance,
    &::cls::_LogGroup_default_instance_._instance,
    &::cls::_LogGroupList_default_instance_._instance,
};
const char descriptor_table_protodef_cls_5flogs_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\016cls_logs.proto\022\003cls\"^\n\003Log\022\014\n\004time\030\001 \002"
    "(\003\022\"\n\010contents\030\002 \003(\0132\020.cls.Log.Content\032%"
    "\n\007Content\022\013\n\003key\030\001 \002(\t\022\r\n\005value\030\002 \002(\t\"$\n"
    "\006LogTag\022\013\n\003key\030\001 \002(\t\022\r\n\005value\030\002 \002(\t\"w\n\010L"
    "ogGroup\022\026\n\004logs\030\001 \003(\0132\010.cls.Log\022\023\n\013conte"
    "xtFlow\030\002 \001(\t\022\020\n\010filename\030\003 \001(\t\022\016\n\006source"
    "\030\004 \001(\t\022\034\n\007logTags\030\005 \003(\0132\013.cls.LogTag\"3\n\014"
    "LogGroupList\022#\n\014logGroupList\030\001 \003(\0132\r.cls"
    ".LogGroup"
};
static ::absl::once_flag descriptor_table_cls_5flogs_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_cls_5flogs_2eproto = {
    false,
    false,
    329,
    descriptor_table_protodef_cls_5flogs_2eproto,
    "cls_logs.proto",
    &descriptor_table_cls_5flogs_2eproto_once,
    nullptr,
    0,
    5,
    schemas,
    file_default_instances,
    TableStruct_cls_5flogs_2eproto::offsets,
    file_level_enum_descriptors_cls_5flogs_2eproto,
    file_level_service_descriptors_cls_5flogs_2eproto,
};
namespace cls {
// ===================================================================

class Log_Content::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Log_Content>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Log_Content, _impl_._has_bits_);
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

Log_Content::Log_Content(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cls.Log.Content)
}
inline PROTOBUF_NDEBUG_INLINE Log_Content::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cls::Log_Content& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        key_(arena, from.key_),
        value_(arena, from.value_) {}

Log_Content::Log_Content(
    ::google::protobuf::Arena* arena,
    const Log_Content& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Log_Content* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:cls.Log.Content)
}
inline PROTOBUF_NDEBUG_INLINE Log_Content::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        key_(arena),
        value_(arena) {}

inline void Log_Content::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Log_Content::~Log_Content() {
  // @@protoc_insertion_point(destructor:cls.Log.Content)
  SharedDtor(*this);
}
inline void Log_Content::SharedDtor(MessageLite& self) {
  Log_Content& this_ = static_cast<Log_Content&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.key_.Destroy();
  this_._impl_.value_.Destroy();
  this_._impl_.~Impl_();
}

inline void* Log_Content::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Log_Content(arena);
}
constexpr auto Log_Content::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Log_Content),
                                            alignof(Log_Content));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Log_Content::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Log_Content_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        Log_Content::IsInitializedImpl,
        &Log_Content::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Log_Content>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Log_Content::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Log_Content>(), &Log_Content::ByteSizeLong,
            &Log_Content::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Log_Content, _impl_._cached_size_),
        false,
    },
    &Log_Content::kDescriptorMethods,
    &descriptor_table_cls_5flogs_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Log_Content::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 32, 2> Log_Content::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Log_Content, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cls::Log_Content>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // required string value = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(Log_Content, _impl_.value_)}},
    // required string key = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Log_Content, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string key = 1;
    {PROTOBUF_FIELD_OFFSET(Log_Content, _impl_.key_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required string value = 2;
    {PROTOBUF_FIELD_OFFSET(Log_Content, _impl_.value_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\17\3\5\0\0\0\0\0"
    "cls.Log.Content"
    "key"
    "value"
  }},
};

PROTOBUF_NOINLINE void Log_Content::Clear() {
// @@protoc_insertion_point(message_clear_start:cls.Log.Content)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.key_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.value_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Log_Content::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Log_Content& this_ = static_cast<const Log_Content&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Log_Content::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Log_Content& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cls.Log.Content)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // required string key = 1;
          if (cached_has_bits & 0x00000001u) {
            const std::string& _s = this_._internal_key();
            ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                        "cls.Log.Content.key");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // required string value = 2;
          if (cached_has_bits & 0x00000002u) {
            const std::string& _s = this_._internal_value();
            ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                        "cls.Log.Content.value");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cls.Log.Content)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Log_Content::ByteSizeLong(const MessageLite& base) {
          const Log_Content& this_ = static_cast<const Log_Content&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Log_Content::ByteSizeLong() const {
          const Log_Content& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cls.Log.Content)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // required string key = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_key());
            }
            // required string value = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_value());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Log_Content::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Log_Content*>(&to_msg);
  auto& from = static_cast<const Log_Content&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cls.Log.Content)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_key(from._internal_key());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_value(from._internal_value());
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Log_Content::CopyFrom(const Log_Content& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cls.Log.Content)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Log_Content::IsInitializedImpl(
    const MessageLite& msg) {
  auto& this_ = static_cast<const Log_Content&>(msg);
  if (_Internal::MissingRequiredFields(this_._impl_._has_bits_)) {
    return false;
  }
  return true;
}

void Log_Content::InternalSwap(Log_Content* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.key_, &other->_impl_.key_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.value_, &other->_impl_.value_, arena);
}

::google::protobuf::Metadata Log_Content::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Log::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Log>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Log, _impl_._has_bits_);
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

Log::Log(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cls.Log)
}
inline PROTOBUF_NDEBUG_INLINE Log::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cls::Log& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        contents_{visibility, arena, from.contents_} {}

Log::Log(
    ::google::protobuf::Arena* arena,
    const Log& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Log* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.time_ = from._impl_.time_;

  // @@protoc_insertion_point(copy_constructor:cls.Log)
}
inline PROTOBUF_NDEBUG_INLINE Log::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        contents_{visibility, arena} {}

inline void Log::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.time_ = {};
}
Log::~Log() {
  // @@protoc_insertion_point(destructor:cls.Log)
  SharedDtor(*this);
}
inline void Log::SharedDtor(MessageLite& self) {
  Log& this_ = static_cast<Log&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* Log::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Log(arena);
}
constexpr auto Log::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Log, _impl_.contents_) +
          decltype(Log::_impl_.contents_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(Log), alignof(Log), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Log::PlacementNew_,
                                 sizeof(Log),
                                 alignof(Log));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Log::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Log_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        Log::IsInitializedImpl,
        &Log::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Log>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Log::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Log>(), &Log::ByteSizeLong,
            &Log::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Log, _impl_._cached_size_),
        false,
    },
    &Log::kDescriptorMethods,
    &descriptor_table_cls_5flogs_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Log::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> Log::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Log, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cls::Log>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .cls.Log.Content contents = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Log, _impl_.contents_)}},
    // required int64 time = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Log, _impl_.time_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(Log, _impl_.time_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required int64 time = 1;
    {PROTOBUF_FIELD_OFFSET(Log, _impl_.time_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // repeated .cls.Log.Content contents = 2;
    {PROTOBUF_FIELD_OFFSET(Log, _impl_.contents_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cls::Log_Content>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Log::Clear() {
// @@protoc_insertion_point(message_clear_start:cls.Log)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.contents_.Clear();
  _impl_.time_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Log::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Log& this_ = static_cast<const Log&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Log::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Log& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cls.Log)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // required int64 time = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<1>(
                    stream, this_._internal_time(), target);
          }

          // repeated .cls.Log.Content contents = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_contents_size());
               i < n; i++) {
            const auto& repfield = this_._internal_contents().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cls.Log)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Log::ByteSizeLong(const MessageLite& base) {
          const Log& this_ = static_cast<const Log&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Log::ByteSizeLong() const {
          const Log& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cls.Log)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .cls.Log.Content contents = 2;
            {
              total_size += 1UL * this_._internal_contents_size();
              for (const auto& msg : this_._internal_contents()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // required int64 time = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_time());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Log::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Log*>(&to_msg);
  auto& from = static_cast<const Log&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cls.Log)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_contents()->MergeFrom(
      from._internal_contents());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.time_ = from._impl_.time_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Log::CopyFrom(const Log& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cls.Log)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Log::IsInitializedImpl(
    const MessageLite& msg) {
  auto& this_ = static_cast<const Log&>(msg);
  if (_Internal::MissingRequiredFields(this_._impl_._has_bits_)) {
    return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this_._internal_contents()))
    return false;
  return true;
}

void Log::InternalSwap(Log* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.contents_.InternalSwap(&other->_impl_.contents_);
        swap(_impl_.time_, other->_impl_.time_);
}

::google::protobuf::Metadata Log::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class LogTag::_Internal {
 public:
  using HasBits =
      decltype(std::declval<LogTag>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(LogTag, _impl_._has_bits_);
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

LogTag::LogTag(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cls.LogTag)
}
inline PROTOBUF_NDEBUG_INLINE LogTag::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cls::LogTag& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        key_(arena, from.key_),
        value_(arena, from.value_) {}

LogTag::LogTag(
    ::google::protobuf::Arena* arena,
    const LogTag& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  LogTag* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:cls.LogTag)
}
inline PROTOBUF_NDEBUG_INLINE LogTag::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        key_(arena),
        value_(arena) {}

inline void LogTag::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
LogTag::~LogTag() {
  // @@protoc_insertion_point(destructor:cls.LogTag)
  SharedDtor(*this);
}
inline void LogTag::SharedDtor(MessageLite& self) {
  LogTag& this_ = static_cast<LogTag&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.key_.Destroy();
  this_._impl_.value_.Destroy();
  this_._impl_.~Impl_();
}

inline void* LogTag::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) LogTag(arena);
}
constexpr auto LogTag::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(LogTag),
                                            alignof(LogTag));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull LogTag::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_LogTag_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        LogTag::IsInitializedImpl,
        &LogTag::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<LogTag>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &LogTag::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<LogTag>(), &LogTag::ByteSizeLong,
            &LogTag::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(LogTag, _impl_._cached_size_),
        false,
    },
    &LogTag::kDescriptorMethods,
    &descriptor_table_cls_5flogs_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* LogTag::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 27, 2> LogTag::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(LogTag, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cls::LogTag>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // required string value = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(LogTag, _impl_.value_)}},
    // required string key = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(LogTag, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string key = 1;
    {PROTOBUF_FIELD_OFFSET(LogTag, _impl_.key_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required string value = 2;
    {PROTOBUF_FIELD_OFFSET(LogTag, _impl_.value_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\12\3\5\0\0\0\0\0"
    "cls.LogTag"
    "key"
    "value"
  }},
};

PROTOBUF_NOINLINE void LogTag::Clear() {
// @@protoc_insertion_point(message_clear_start:cls.LogTag)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.key_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.value_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* LogTag::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const LogTag& this_ = static_cast<const LogTag&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* LogTag::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const LogTag& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cls.LogTag)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // required string key = 1;
          if (cached_has_bits & 0x00000001u) {
            const std::string& _s = this_._internal_key();
            ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                        "cls.LogTag.key");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // required string value = 2;
          if (cached_has_bits & 0x00000002u) {
            const std::string& _s = this_._internal_value();
            ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                        "cls.LogTag.value");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cls.LogTag)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t LogTag::ByteSizeLong(const MessageLite& base) {
          const LogTag& this_ = static_cast<const LogTag&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t LogTag::ByteSizeLong() const {
          const LogTag& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cls.LogTag)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // required string key = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_key());
            }
            // required string value = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_value());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void LogTag::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LogTag*>(&to_msg);
  auto& from = static_cast<const LogTag&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cls.LogTag)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_key(from._internal_key());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_value(from._internal_value());
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LogTag::CopyFrom(const LogTag& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cls.LogTag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool LogTag::IsInitializedImpl(
    const MessageLite& msg) {
  auto& this_ = static_cast<const LogTag&>(msg);
  if (_Internal::MissingRequiredFields(this_._impl_._has_bits_)) {
    return false;
  }
  return true;
}

void LogTag::InternalSwap(LogTag* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.key_, &other->_impl_.key_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.value_, &other->_impl_.value_, arena);
}

::google::protobuf::Metadata LogTag::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class LogGroup::_Internal {
 public:
  using HasBits =
      decltype(std::declval<LogGroup>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(LogGroup, _impl_._has_bits_);
};

LogGroup::LogGroup(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cls.LogGroup)
}
inline PROTOBUF_NDEBUG_INLINE LogGroup::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cls::LogGroup& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        logs_{visibility, arena, from.logs_},
        logtags_{visibility, arena, from.logtags_},
        contextflow_(arena, from.contextflow_),
        filename_(arena, from.filename_),
        source_(arena, from.source_) {}

LogGroup::LogGroup(
    ::google::protobuf::Arena* arena,
    const LogGroup& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  LogGroup* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:cls.LogGroup)
}
inline PROTOBUF_NDEBUG_INLINE LogGroup::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        logs_{visibility, arena},
        logtags_{visibility, arena},
        contextflow_(arena),
        filename_(arena),
        source_(arena) {}

inline void LogGroup::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
LogGroup::~LogGroup() {
  // @@protoc_insertion_point(destructor:cls.LogGroup)
  SharedDtor(*this);
}
inline void LogGroup::SharedDtor(MessageLite& self) {
  LogGroup& this_ = static_cast<LogGroup&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.contextflow_.Destroy();
  this_._impl_.filename_.Destroy();
  this_._impl_.source_.Destroy();
  this_._impl_.~Impl_();
}

inline void* LogGroup::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) LogGroup(arena);
}
constexpr auto LogGroup::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(LogGroup, _impl_.logs_) +
          decltype(LogGroup::_impl_.logs_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(LogGroup, _impl_.logtags_) +
          decltype(LogGroup::_impl_.logtags_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(LogGroup), alignof(LogGroup), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&LogGroup::PlacementNew_,
                                 sizeof(LogGroup),
                                 alignof(LogGroup));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull LogGroup::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_LogGroup_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        LogGroup::IsInitializedImpl,
        &LogGroup::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<LogGroup>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &LogGroup::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<LogGroup>(), &LogGroup::ByteSizeLong,
            &LogGroup::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(LogGroup, _impl_._cached_size_),
        false,
    },
    &LogGroup::kDescriptorMethods,
    &descriptor_table_cls_5flogs_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* LogGroup::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 2, 46, 2> LogGroup::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(LogGroup, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cls::LogGroup>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .cls.Log logs = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(LogGroup, _impl_.logs_)}},
    // optional string contextFlow = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(LogGroup, _impl_.contextflow_)}},
    // optional string filename = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(LogGroup, _impl_.filename_)}},
    // optional string source = 4;
    {::_pbi::TcParser::FastSS1,
     {34, 2, 0, PROTOBUF_FIELD_OFFSET(LogGroup, _impl_.source_)}},
    // repeated .cls.LogTag logTags = 5;
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 1, PROTOBUF_FIELD_OFFSET(LogGroup, _impl_.logtags_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .cls.Log logs = 1;
    {PROTOBUF_FIELD_OFFSET(LogGroup, _impl_.logs_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional string contextFlow = 2;
    {PROTOBUF_FIELD_OFFSET(LogGroup, _impl_.contextflow_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string filename = 3;
    {PROTOBUF_FIELD_OFFSET(LogGroup, _impl_.filename_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string source = 4;
    {PROTOBUF_FIELD_OFFSET(LogGroup, _impl_.source_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // repeated .cls.LogTag logTags = 5;
    {PROTOBUF_FIELD_OFFSET(LogGroup, _impl_.logtags_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cls::Log>()},
    {::_pbi::TcParser::GetTable<::cls::LogTag>()},
  }}, {{
    "\14\0\13\10\6\0\0\0"
    "cls.LogGroup"
    "contextFlow"
    "filename"
    "source"
  }},
};

PROTOBUF_NOINLINE void LogGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:cls.LogGroup)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.logs_.Clear();
  _impl_.logtags_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.contextflow_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.filename_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.source_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* LogGroup::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const LogGroup& this_ = static_cast<const LogGroup&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* LogGroup::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const LogGroup& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cls.LogGroup)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .cls.Log logs = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_logs_size());
               i < n; i++) {
            const auto& repfield = this_._internal_logs().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional string contextFlow = 2;
          if (cached_has_bits & 0x00000001u) {
            const std::string& _s = this_._internal_contextflow();
            ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                        "cls.LogGroup.contextFlow");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // optional string filename = 3;
          if (cached_has_bits & 0x00000002u) {
            const std::string& _s = this_._internal_filename();
            ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                        "cls.LogGroup.filename");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // optional string source = 4;
          if (cached_has_bits & 0x00000004u) {
            const std::string& _s = this_._internal_source();
            ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                        "cls.LogGroup.source");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // repeated .cls.LogTag logTags = 5;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_logtags_size());
               i < n; i++) {
            const auto& repfield = this_._internal_logtags().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    5, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cls.LogGroup)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t LogGroup::ByteSizeLong(const MessageLite& base) {
          const LogGroup& this_ = static_cast<const LogGroup&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t LogGroup::ByteSizeLong() const {
          const LogGroup& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cls.LogGroup)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .cls.Log logs = 1;
            {
              total_size += 1UL * this_._internal_logs_size();
              for (const auto& msg : this_._internal_logs()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .cls.LogTag logTags = 5;
            {
              total_size += 1UL * this_._internal_logtags_size();
              for (const auto& msg : this_._internal_logtags()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000007u) {
            // optional string contextFlow = 2;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_contextflow());
            }
            // optional string filename = 3;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_filename());
            }
            // optional string source = 4;
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_source());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void LogGroup::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LogGroup*>(&to_msg);
  auto& from = static_cast<const LogGroup&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cls.LogGroup)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_logs()->MergeFrom(
      from._internal_logs());
  _this->_internal_mutable_logtags()->MergeFrom(
      from._internal_logtags());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_contextflow(from._internal_contextflow());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_filename(from._internal_filename());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_source(from._internal_source());
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LogGroup::CopyFrom(const LogGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cls.LogGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool LogGroup::IsInitializedImpl(
    const MessageLite& msg) {
  auto& this_ = static_cast<const LogGroup&>(msg);
  if (!::google::protobuf::internal::AllAreInitialized(this_._internal_logs()))
    return false;
  if (!::google::protobuf::internal::AllAreInitialized(this_._internal_logtags()))
    return false;
  return true;
}

void LogGroup::InternalSwap(LogGroup* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.logs_.InternalSwap(&other->_impl_.logs_);
  _impl_.logtags_.InternalSwap(&other->_impl_.logtags_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.contextflow_, &other->_impl_.contextflow_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.filename_, &other->_impl_.filename_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.source_, &other->_impl_.source_, arena);
}

::google::protobuf::Metadata LogGroup::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class LogGroupList::_Internal {
 public:
};

LogGroupList::LogGroupList(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cls.LogGroupList)
}
inline PROTOBUF_NDEBUG_INLINE LogGroupList::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cls::LogGroupList& from_msg)
      : loggrouplist_{visibility, arena, from.loggrouplist_},
        _cached_size_{0} {}

LogGroupList::LogGroupList(
    ::google::protobuf::Arena* arena,
    const LogGroupList& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  LogGroupList* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:cls.LogGroupList)
}
inline PROTOBUF_NDEBUG_INLINE LogGroupList::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : loggrouplist_{visibility, arena},
        _cached_size_{0} {}

inline void LogGroupList::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
LogGroupList::~LogGroupList() {
  // @@protoc_insertion_point(destructor:cls.LogGroupList)
  SharedDtor(*this);
}
inline void LogGroupList::SharedDtor(MessageLite& self) {
  LogGroupList& this_ = static_cast<LogGroupList&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* LogGroupList::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) LogGroupList(arena);
}
constexpr auto LogGroupList::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(LogGroupList, _impl_.loggrouplist_) +
          decltype(LogGroupList::_impl_.loggrouplist_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(LogGroupList), alignof(LogGroupList), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&LogGroupList::PlacementNew_,
                                 sizeof(LogGroupList),
                                 alignof(LogGroupList));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull LogGroupList::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_LogGroupList_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        LogGroupList::IsInitializedImpl,
        &LogGroupList::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<LogGroupList>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &LogGroupList::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<LogGroupList>(), &LogGroupList::ByteSizeLong,
            &LogGroupList::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(LogGroupList, _impl_._cached_size_),
        false,
    },
    &LogGroupList::kDescriptorMethods,
    &descriptor_table_cls_5flogs_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* LogGroupList::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> LogGroupList::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cls::LogGroupList>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .cls.LogGroup logGroupList = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(LogGroupList, _impl_.loggrouplist_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .cls.LogGroup logGroupList = 1;
    {PROTOBUF_FIELD_OFFSET(LogGroupList, _impl_.loggrouplist_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cls::LogGroup>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void LogGroupList::Clear() {
// @@protoc_insertion_point(message_clear_start:cls.LogGroupList)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.loggrouplist_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* LogGroupList::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const LogGroupList& this_ = static_cast<const LogGroupList&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* LogGroupList::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const LogGroupList& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cls.LogGroupList)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .cls.LogGroup logGroupList = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_loggrouplist_size());
               i < n; i++) {
            const auto& repfield = this_._internal_loggrouplist().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cls.LogGroupList)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t LogGroupList::ByteSizeLong(const MessageLite& base) {
          const LogGroupList& this_ = static_cast<const LogGroupList&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t LogGroupList::ByteSizeLong() const {
          const LogGroupList& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cls.LogGroupList)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .cls.LogGroup logGroupList = 1;
            {
              total_size += 1UL * this_._internal_loggrouplist_size();
              for (const auto& msg : this_._internal_loggrouplist()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void LogGroupList::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LogGroupList*>(&to_msg);
  auto& from = static_cast<const LogGroupList&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cls.LogGroupList)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_loggrouplist()->MergeFrom(
      from._internal_loggrouplist());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LogGroupList::CopyFrom(const LogGroupList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cls.LogGroupList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool LogGroupList::IsInitializedImpl(
    const MessageLite& msg) {
  auto& this_ = static_cast<const LogGroupList&>(msg);
  if (!::google::protobuf::internal::AllAreInitialized(this_._internal_loggrouplist()))
    return false;
  return true;
}

void LogGroupList::InternalSwap(LogGroupList* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.loggrouplist_.InternalSwap(&other->_impl_.loggrouplist_);
}

::google::protobuf::Metadata LogGroupList::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace cls
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_cls_5flogs_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
